[versions]
agp = "8.10.0"
kotlin = "2.2.0-RC"

tensorflow = "1.3.0"
qnn = "2.29.0"

moko-resources = "0.24.5"

# Samples
android-compileSdk = "35"
android-minSdk = "26"

compose = "1.8.1"
activity-compose = "1.10.1"

coroutines = "1.10.2"
decompose = "3.3.0"
koin = "4.0.2"
kermit = "2.0.5"
serialization = "1.8.1"
essenty = "2.5.0"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

tensorflow = { module = "com.google.ai.edge.litert:litert", version.ref = "tensorflow"  }
tensorflow-gpu = { module = "com.google.ai.edge.litert:litert-gpu", version.ref = "tensorflow" }
tensorflow-gpu-api = { module = "com.google.ai.edge.litert:litert-gpu-api", version.ref = "tensorflow" }
qnn-runtime = { module = "com.qualcomm.qti:qnn-runtime", version.ref = "qnn" }
qnn-litert-delegate = { module = "com.qualcomm.qti:qnn-litert-delegate", version.ref = "qnn" }

moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko-resources" }

# Samples
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
essenty-lifecycle = { group = "com.arkivanov.essenty", name = "lifecycle", version.ref = "essenty" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }

kermit-logger = { module = "co.touchlab:kermit", version.ref = "kermit" }

serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref="serialization" }


[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
